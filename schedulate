#!/bin/bash

# WARNING: These instructions apply to Debian-style Linuxes, like Ubuntu.
# You may have to update the /var/pipulate/ path to reflect your repository
# location. This file is what makes Pipulate "auto-start" like Apache.
# It will only work properly when Flask is NOT run in debug mode, because debug
# mode produces 2 instances of python. I left the commented-out line under the
# "stop" case to make it work in debug mode, but it will conflict with running
# the Pipulate Scheduler on the same server if you chose to go that route.
# Because Pipulate has such verbose console output, I recommend ensuring the
# app.run line in pipulate.py appears like this:

#  app.run(host='0.0.0.0', port=8888, debug=False)

# This is the startstop daemon script that goes in /etc/init.d/ by executing
# this command with the pipulate repsitory as your current directory:

# cp pipulate /etc/init.d/pipulate

# Once it's in location, you have to make the dameon activate on startup by
# executing this command one time on the server:

# update-rc.d pipulate enable

# In additon to Pipulate web server automatically starting on server reboots,
# You will now be able to stop or start the Ppulate web server with:

# /etc/init.d/pipulate start
# /etc/init.d/pipulate stop

DAEMON=/usr/bin/python
ARGS=/var/pipulate/loopipulate.py
PIDFILE=/var/run/serve.pid

case "$1" in
  start)
    echo "Starting server"
    /sbin/start-stop-daemon --start --pidfile $PIDFILE \
        --user www-data --group www-data \
        -b --make-pidfile \
        --chuid www-data \
        --exec $DAEMON $ARGS
    ;;
  stop)
    echo "Stopping server"
    /sbin/start-stop-daemon --stop --pidfile $PIDFILE --verbose
    # /sbin/start-stop-daemon --stop --name python --verbose
    ;;
  *)
    echo "Usage: /etc/init.d/pipulate {start|stop}"
    exit 1
    ;;
esac

exit 0
