# Beginning of Journal
--------------------------------------------------------------------------------
## Mon Nov 24 10:00:17 EST 2014

Lovely! I got the macro typed just in time... no, just too late. It's 10:00 AM.
Chatted with JM about his copyright adventure. But what should today look like?
Reveiw the issues and put it in a "more traditional" Google Docs daily journal
entry of the type that's automatically shared with Flying Point. Those have
come to a sudden stop now that I've been using this journal for that.

Your time here at Flying Point is going to be greatly characterized by how you
strike that balance between the technical work that sets you ahead and apart
and the client work that needs to get done and pays the bills. Strike that
balance properly. Do that by never working on tech stuff that looks excessively
geeky or indulgent. Instead, always focus on things that go to the bottom
line--as Pipulate soon will.

Mon Nov 24 18:02:46 EST 2014
End of day so soon. Much went into meetings and talks again, but that's a large
part of my role here. But I did take a few moments towards the end of the day
to see if I could get Python 3.x running on Tiny Core Linux... and even
researched other lightweight Linuxes a little! But it turns out that Python
3.3.1 actually is in the Tiny Core 4.x repository. It's a bit strange, but my
best choice might be to use the latest 4.x version of Tiny Core just to get
Python 3.x. I hope I'm not relying on any Python 3.4.x features.

--------------------------------------------------------------------------------
## Fri Nov 21 16:04:24 EST 2014

Wow, I am working on my Macbook Air today that had Maverick on it, but today I
upgraded to Yosemite. I shot a bunch of videos, and got my screens to a nice
working point where I don't have to rely on switching tabs to see more than one
terminal at once. Even on a tiny Macbook Air screen, I can get 2 80-column
terminal side-by-side. That's a pretty good environment to work and produce
videos in, given the Mac's remarkable implementation of virtual screens--almost
good enough to make me not miss Amiga+N... which I still remember as clear as
yesterday, even though it's like 20 years later.

Okay, what next? This is a nexus moment in Pipulate. First thing is I lost a
bunch of videos that I uploaded today from ScreenFlow, and I think it was from
trying to upload too many at once. I have to go one at a time, which could very
well leave a backlog of videos to upload by the end of the day. My shot at
getting Levinux working didn't work out very well. That's such a shame. The
question is how to get a QEMU binary for Mac that works on ALL Mac hardware
platforms. Ugh! 

Give Levinux one more try! But keep track of the order of videos you're
uploading. The first one that uploaded successfully wasn't supposed to be the
first. Here's the actual order for today:

  1. Yosemite (waiting to appear)
  2. CodeWithMike (published)
  3. IntroductionToYosemite
  4. LevinuxNoGo
  5. GithubReadmeMarkdown
  6. QemuOnYosemite

Fri Nov 21 18:10:42 EST 2014
Got tons of videos done but not uploaded. Also did a great proof of concept
that Levinux will be able to run on Yosemite. I have to go back to the old Q
emulator. So be it. Anyway, let me commit this and just get into a good place
for picking this up again later.

--------------------------------------------------------------------------------
## Thu Nov 20 13:32:05 EST 2014

Okay, we had a circuit blow and I had to reboot my machine, so I took a lunch
break. Good stopping point. I just did a github push. This Flask flash
capability is a good one. It's interesting that stuff like that is actually
built into the framework. Little surprises. I need to make sure I understand
what other things like flash there may be. 

When you click on Pipulate from a Google Spreadsheet, there should be some way
to keep re-filling-in the URL into that field. Maybe tie it to session.
Whenever it's read off of the URL, write it into a session variable. Whenever
the form is built, populate it if found in session.

Now it's time to get serious about this project. Set the stage for an
incredibly awesome tomorrow.

Thu Nov 20 14:59:35 EST 2014
Tore out form custom field validation that didn't appear to be working anyway.
It was too fragile, and there appear to be better ways of handling it.

Thu Nov 20 16:54:31 EST 2014
How can I have the best tomorrow possible? How can I come back with this
amazing Pipulate product?

--------------------------------------------------------------------------------
## Thu Nov 20 09:26:46 EST 2014

And a new day begins! I tried doing the unboxing for the Dell Venue 8 Pro
docking station that I helped Kickstart, but I got into the office just a
little too late. The morning activity started in a big way during the video,
and I'm pretty sure there was client work discussion in the background, and I
have to burn the video. Ugh. Oh well. It's not meant to be with the Dell Venue
8 videos I guess. I lost a whole unboxing video of the original device too, but
for different reasons.

This work you're doing now is to reduce the magnitude of client requests and
increase the frequency and quality and proactive nature of deliverables. Rapid
investigations. The initial keyword research and site audit. Everything. And
tons of things outside the direct SEO and Social industry that could benefit
from stepping through a list of things to do some sort of lookup against any
data source from the Internet. The trick now is to get to a point where you can
get the new Pipulate running on your last remaining Rackspace server. Have it
run side-by-side with your old work.

I went back to the popping up a new window for the bookmarklet, but left the
other code in there and commented out. I am going to avoid issues of providing
a way to use it one way or the other (for now). I have much more important
set-up work to do for tomorrow's code-with-Mike Friday. 

We are actually at a pretty critical juncture user-interface-wise. What I need
to do is create some excellent communication between the server and the
pipulate user interface. There's mechanisms built into Flask, and there are
other things I could do. I should at the very minimum use the built-into-Flask
stuff--at least for and especially for debugging. 

Thu Nov 20 11:21:47 EST 2014
Okay, I have flask message flashing in as a Hello World sort of thing. Turn it
into some basic feedback for the user now.

--------------------------------------------------------------------------------
## Wed Nov 19 09:30:20 EST 2014

Ah, yep. Executing that new datestamp headline macro has a satisfying feeling
in the morning. I look to see what time I did it by. Compare it to yesterday.
Make myself time and mission-sensitive. And now what? Follow through on your
work from last night. Had good morning chat with my coworkers about the wisdom
of work on the side to have skin in the game, and on the switch from iPhone to
Android (Moto X) and on the new YouTube production facility in NYC which we're
skipping the parties going on today and tomorrow, but are still determined to
get to maybe later. We're all working on getting our subscriber rates up to
over 5000... hahaha!

Wed Nov 19 10:38:23 EST 2014
I still haven't done the test I want, but I've been invited to Lily and Adal's
wedding, and symbol under c in facade is called a cedilla. Ha ha ha. I love
where I work. Okay, so...

Wed Nov 19 11:05:12 EST 2014
And again! 1, 2, 3... 1? 

Wed Nov 19 13:59:00 EST 2014
This is why I have work from home Fridays. Okay, I was getting hung up on the
login screen not showing the permission scopes it was asking for correctly, but
it turns out that's because the session was already logged in, and progressive
scope was letting an incomplete list show (only offline access). And so I just
implemented a logout link.

Wed Nov 19 15:25:42 EST 2014
I got out the single email that I had to do today. I also did a test to see
that the OAuth2 login actually allowed the pipulation process to occur--and it
did! I wish I could have made a Code-with-Mike Friday video out of that, but I
really have to put login behind me using whatever scraps of time I can
throughout the day.

Now I need to put the polish on it.

Wed Nov 19 18:18:51 EST 2014
Interesting day. I get to work late tonight because Adi is with the
grandparents. How am I best going to use it? Unboxing video of Dell Pro Venue 8
docking station that I helped kickstart? Or get Pipulate further along?

Wed Nov 19 19:35:50 EST 2014
Finally decided to fix Google Spreadsheet redraw problem, which seems to happen
from using any sort of element select logic on the screen. Ended up switching
to tab approach in the process. May go back.

--------------------------------------------------------------------------------
## Tue Nov 18 09:23:58 EST 2014

Ah, the feeling of my old macro at the beginning of the morning. An actual
OS/vim-inserted datestamp of the moment I sat down. 

Tue Nov 18 10:13:29 EST 2014
I especially like being able to pop in a datestamp as I go. It gives a real
idea of the flow of the day. I get in early and have a really good mentoring
career chat with one of my people. I have a 1:00 PM client call coming up, but
I will have backup from 2 people on it. I'm not a fan of presenting the monthly
reports myself, but its mostly because I didn't prepare them myself and don't
necessarily have the depth behind what I'm showing if/when challenged. That's
mitigated a lot by having my counterparts in on the presentation. 

Be prepared for that call today, and then be ready to run off for the other
on-site client meeting.

Tue Nov 18 11:17:48 EST 2014
Ah, the lovely fire-drills. Okay, I have to make sure my meeting is scheduled
correctly in Gotomeeting. Okay, done. So many usernames and passwords to keep
track of! I have a client call coming up at 1:00 PM and then have to scoot over
to a client site.

Tue Nov 18 12:46:06 EST 2014
Okay, the client meeting is just 15 minutes from now. Getting my last practice
runs in, but it looks like one of my people is going to be walking the client
through most of the deck. Just don't let yourself become mentally lazy. Stay on
top of everything.

Tue Nov 18 17:45:31 EST 2014
Okay, did an on-site client meeting today, plus a monthly SEO call. Really
nothing new in terms of codding. Only about 15 minutes before day is over. Can
I get some coding in? Can I test to see if authorization works? If I did, how
would it go? Page? http://burnash.github.io/gspread/oauth2.html

--------------------------------------------------------------------------------
## Mon Nov 17 17:41:36 EST 2014

It's the end of the day now--5:40 PM and I really feel the difference already
of having a daily work journal directly in my repository. THIS is a better base
of operations - a command-line terminal with vim running - than a web browser
with infinite distractions. I love having my keyboard macro back for achieving
a sort of blog-like chronological ordering while still in a text file. It will
be the biggest part of the Pipulate project file-wise, but so what? It's like
the DNA of this project. It will be interesting for dissecting my thoughts
about my decisions if the project ever really gets so big that anyone cares. It
will stay inextricably interconnected with the code itself in a way that not
even the YouTube videos can. But it is key to my doing coding work during the
week in a documented fashion without having to do a YouTube video for every
commit.

Soon, my Dell Venue 8 Pro Kickstarted docking/charging station will arrive, and
I might even consider using that here at the office. It will be nice to have a
TOTALLY portable Windows system. If I set that up with a webserver and maybe a
custom hosts file, I could use it for offline development work in the Linus
Torvalds coding at 30,000 feet way--except of course, on the subway. Think
about having no web service connections to worry about breaking when testing
Pipulate! Wow, that will really help me polish the csv-file aspect (versus the
Google Spreadsheets mode).

One thing: I can't really remain pure about when I do commits and pushes. This
entry, for example, is going to have to be pushed before I leave, because it
would be ridiculous risking losing thought-work like this by not committing and
pushing from wherever I am at the end of the day.

And now a word about platform-independence! I used to think platform
independence existed so long as you could get a terminal window that you could
SSH from--and into whatever remote server you were ACTUALLY developing on. Now,
I believe in developing TRULY local on the very machine you're sitting down at.
Why let bandwidth and flakey connections be a bottleneck? Why not get the
benefit of the speed of the hardware you're sitting in front of? Only reason
not to is if it couldn't run your code just as well as anything else, and
that's no longer the case. Even Windows 7 makes a decent Linux / Python / vim
and git platform so long as you install MinGW -- and probably Cygwin would do
as well. But I chose MinGW because I got Pipulate running on it most easily. It
worked with the main Python distribution which was the newest, instead of the
one bundled with the Cygwin/MinGW installer. It probably really doesn't even
matter if I figured it out on Cygwin first, that would have been fine. The
important thing is close-enough to be compatible and host the app. Knowledge is
transferable, because most knowledge is bunched up around Python and vim.

--------------------------------------------------------------------------------
## Mon Nov 17 12:55:32 EST 2014

It's very refreshing to not have to worry about SSH sessions timing out. But
I'm on a Windows machine in vim doing Python work. Imagine that. As much as I
love the Raspberry Pi, I have to adjust my "what I'm all about" to be more
about Linux-light, Python, vim and git. MinGW seems to be plenty of Unixy like
stuff to keep things chugging along. But that script I wrote to publish from
git to WordPress will probably be an example of something that relies a little
more heavily on an actual Bash shell. Get a tiny little follow-on from last
Friday's work done before jumping head-first into client work. Working more
intelligently is what this is all about. And with the amount that SEO has
changed, is changing, and will continue to change, it's really these things
about my daily work-flow that make all the difference. I'm different. But I
have to be different, effective, and still able to communicate well. And so...

1, 2, 3... 1? Been awhile since I've used that technique. Anyone who has read
my prior daily work journals will be used to seeing that technique all over the
place. You always have to start with the first step. And so, you think through
your next 3 steps and tackle step 1. You're always at step 1.

1. Research Flask Sessions VERY QUICKLY. Okay, get over the hangup of having to
do a YouTube video for EVERY edit. This journal in particular should get you
over that. Think out loud here, and it will serve much the same function. 

Okay, done. That's where I should have been on Friday. Do a commit. But I think
don't push. Try to do pushes when a journal entry gets to a natural cut-point.

Mon Nov 17 16:04:04 EST 2014
It's taking some time to massage all the permission stuff into place, but I'm
getting there. 

Mon Nov 17 17:30:18 EST 2014
Yep, definitely helps me keep track of time pretty well. It's also quite clear
I'll be needing to maintain multiple journals--this one and one where I can
name clients by name and the actual issues. At any rate, I'm getting close to a
good commit-and-push point because I finally just got all the scopes right (I
think) to let the Pipulate app work on spreadsheets.

--------------------------------------------------------------------------------
## Mon Nov 17 10:43:32 EST 2014

This is the second daily work journal entry in the same day. What I do is
simply hit the keyboard shortcut: @j, which does all the date insertion and
cursor positioning and markdown formatting so that I can just start typing.
This is something I innovated for myself when I first started using Mercurial
(hg) and later git for my daily work journal--at least on-and-off. It is
continually so tempting to use Google Docs for this purpose, because obviously
it is a more natural writing environment--a real word processor. However, since
committing to vim as my text editor / development environment, I've been
looking for reasons to "be in vim" more often than normal day-to-day agency
life allows. It will look like coding to my co-workers, but it is not coding.
They will even be able to see it through github.

But whereas I had extreme granular permission control over who sees my journal
entries and how under Google Docs (I could start them in a shared or non-shared
location) so that only myself (and perhaps Google) can read them, or so that my
whole team can read them. I've begun to get into that habit here, having almost
every day accounted for. But it's not WHERE every day is accounted for so much as
THAT every day is accounted for. If some future data-mining artificial
intelligence went accounting for my days in the future, if it were in Google
Docs, it may or may not be able to access it, based on permissions and whether
I even published the publish-able, which I usually don't. But when I do, I
publish it on a WordPress site hosted at MikeLev.in, which may or may not be
there and accessible in the future. I may as well give this daily work journal
the same advantages as everything else that ends up in git, and github in
particular. Systems like archive.org and everything else mining public
information will essentially immortalize my daily work journal. Hello World.

So, what next and why? That is the question. Well, it's all about client work.
But it's also about forging the most intelligent way forward possible so that
these next years at Flying Point Digital are as enjoyable and profitable and
contributing to my daughter's education as possible. That means financially
rewarding enough to travel and delegate my work here. The pouring forth of my
online presence will mostly be through here (github) and my YouTube videos.
That is very appropriate, I think. I will probably also use that utility I
wrote that lets me easily publish TO WordPress from GitHub. There's a lot more
I could do with that which I haven't been--but I should, given my recent
activities, and the fact that I already did the difficult work.

It's already noon! Okay, doing these automatic date-stamps as part of the daily
journal entries is going to help a lot too in terms of keeping me aware of
time. It's also going to help me deal with a lot of other related issues, like
maintaining focus in a world and a business where so much of our work is done
on the Internet through Web browsers, but the Web is in itself such a
distraction--especially with all these notification systems competing for our
attention. The trick is to use this daily journal in a plain old text file in
vim natively on my machine as my main go-to point throughout the day. I detect
the top-item to-do list going to have to end up at the top of this document.
Although of course I'm going to be sanitizing out actual client names as I go
so that everything remains publish-able.

--------------------------------------------------------------------------------
## Mon Nov 17 09:20:04 EST 2014

Dear daily work journal inside my github repository for the Pipulate project. I
just made this file, journal.txt. It's a pretty big deal to me where I keep my
daily journal, for it makes all sorts of decisions automatic, like whether, how
and where it gets published. By actually putting IN the repository for a free
and open source project on github, it will by definition get automatically
published every time I update it, commit changes on this file, and push. And
so, by making this my default first daily work journal location, I am putting
this "task" in charge of all other tasks--including my day-to-day work for
clients and such. And that's a good thing, because my effectiveness here is not
just as another SEO Microsoft Office suite jockey (Powerpoint, Word, email,
etc.) but rather it is in my ability to think different than others and act on
those differences to produce more and different and better results than others
in my field. Ultimately, my effectiveness in the field itself including
whatever it transforms into will be determined by my ability to think and act
better than others.

Okay, some of the things that have to change now are ensuring that my vim
environment is pretty much the same on all of the machines I sit down to work
out. I no longer am logging into some Rackspace or Raspberry Pi server to do my
work through SSH to some remote server (even if the server is sitting next to
me). Instead, I am getting my Linux / Python / vim and git environment right on
the machine I'm working on so that my web development address is localhost.
I've tried to avoid this for some time, but ultimately, it's better to not have
to log into some remote machine. It's even the way git was envisioned by Linus
Torvalds who figured he might want to see who fixed a bug at 30 thousand feet.
See? Linus didn't want to rely on that full-time connection to the Internet
just to do his thing. In today's world of mash-ups, it seems pretty far fetched
to do all your development work locally without an Internet connection, but
even in the case of Pipulate, all you need is a locally running webserver to
simulate the serving of some site on the Web, and using the csv-file interface
to Pipulate instead of the Google Docs interface, and development is totally
possible. I'd have to make access to JQuery, JQuery Mobile and any other
JavaScript libraries that I rely on local, but no big deal. Dev work on
Pipulate disconnected from the Internet is possible, and I should embrace that.

What's further, I should talk as freely as I can about the development of the
Pipulate project in a way that's just as high-profile, exposed and compelling
as those YouTube videos I do on Friday while I'm coding and while I'm walking
my dog in the morning on days I'm not coding. Doing journal entries here in the
repository keeps my mind where it should be--on what I'm doing with this
project and this code. It keeps me practicing vim constantly, and it makes
issues surrounding Pipulate "parent" to even issues surrounding my employers
(and by extension, MY) clients. But there's no problem that my clients face
that aren't specific instances of the types of larger general problems in the
industry that I'm designing Pipulate to address--and ultimately, let us help
our clients fix... and then train them to KEEP those things fixed, so they
don't keep popping out-of-whack. Pipulate is a little bit of a Swiss Army Knife
of SEO & Social tools that can be used on a case-by-case basis in order to do
special investigations (like keyword builds and the like), or it can be the
scheduled and distributed workhorse doing position and popularity monitoring,
distilling down the data into actionable next-step recommendations.

In other words, Pipulate is going to ROCK the SEO and Social worlds--not only
insofar as it will replace other much more expensive tools, but also in how it
will allow you to work with other Pipulators to create circles of private
collaborators to allow you to use each other as (respectfully) as private proxy
servers to distribute monitoring traffic and processing jobs. In yet more other
words, Pipulate will provide a lot of those abilities previously reserved for
only the most advanced technical Kung Fu gurus to the average (yet, slightly
still ambitious) marketer and wanna-be programmer. Pipulate provides a
framework to a large number of the fairly advanced monitoring and
service-interaction tasks you can imagine, while still not calling on you to do
that much programming directly yourself--until the time comes that you do. It's
a lot like that day you try your hand at Excel macros, but instead of such
silly throw-away work as macros within obsolescencing office software, you will
be trying your hand at the actual awesome Python Programming language. I plan
on Pipulate being a gateway drug to programming.

